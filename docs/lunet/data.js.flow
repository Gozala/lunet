// @flow strict

export type Body = null | string | ArrayBuffer | Object

export type EncodedRequest = {|
  url: string,
  destination: string,
  body: Body,
  cache?: CacheType,
  credentials?: CredentialsType,
  headers: Array<[string, string]>,
  integrity?: string,
  keepalive?: boolean,
  method?: string,
  mode?: ?ModeType,
  redirect?: RedirectType,
  referrer?: string,
  referrerPolicy?: ReferrerPolicyType,
  window?: null
|}

export type EncodedResponse = {
  url: string,
  body: Body,
  status: number,
  statusText: string,
  headers: Array<[string, string]>,
  redirected: boolean,
  type: ResponseType
}

type Transferable = ArrayBuffer | MessagePort | ImageBitmap | null

export type RequestMessage = {
  type: "request",
  id: string,
  request: EncodedRequest
}

export type ResponseMessage = {
  type: "response",
  id: string,
  response: EncodedResponse
}

export type Response = {
  type: "message",
  data: ResponseMessage,
  ports: MessagePort[],
  source: ServiceWorker
}

export type Request = {
  type: "message",
  data: RequestMessage,
  ports: MessagePort[],
  target: MessagePort,
  origin: string
}

export type WorkerInbox = {
  type: "message",
  data: WorkerIncomingMessage,
  target: MessagePort,
  origin: string
}

export type WorkerOutbox = {
  type: "message",
  data: WorkerOutgoingMessage,
  target: MessagePort,
  origin: string
}

export type PingMessage = {
  type: "ping"
}

export type PongMessage = {
  type: "pong"
}

export type WorkerIncomingMessage =
  | RequestMessage
  | PingMessage
  | ResponseMessage

export type WorkerOutgoingMessage =
  | ResponseMessage
  | PongMessage
  | RequestMessage
